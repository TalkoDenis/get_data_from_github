# -*- coding: utf-8 -*-
"""Get_data_from_GitHub_v1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_ZItE5BG9akejibj0z4fDx4iyQ6acsOP
"""

# Импорт библиотек
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from github import Github

owner = 'awslabs'
repo = 'git-secrets'

# Пустой датафрейм для дальнейшей работы
df = pd.DataFrame()

g = Github()

# 'Пользователь'/'Репозиторий'
repo = g.get_repo(f'{owner}/{repo}')
for commit in repo.get_commits():

  loc_df = pd.DataFrame({'author':str(commit.author),
                     'commit_date':commit.commit.committer.date}, index=[0])
  df = pd.concat([df, loc_df], ignore_index=True)

df.head()

print(f'Размер датафрейма: {df.shape[0]} строк и {df.shape[1]} столбцов')

# Количество действий (за всё время), совершённых каждым пользователем
df_count = df.groupby('author').agg({'commit_date':'count'}).rename(columns={'commit_date':'commit_count'}).reset_index().sort_values('commit_count', ascending=False)
df_count.head()

fig, ax = plt.subplots(sharey=True, figsize=(12,10))
sns.barplot(data=df_count, x='author', y='commit_count')
plt.title('Количество коммитов на каждого пользователя')
plt.xlabel('Пользователь')
plt.ylabel('Количество коммитов')
plt.xticks(rotation = 90)
plt.show()

# Количество действий, совершённых каждым пользователем на конкретную дату
df['date'] = df['commit_date'].dt.date
df_commit_count = df.groupby(['author', 'date']).agg({'commit_date':'count'}).rename(columns={'commit_date':'commit_count'}).reset_index()
df_commit_count.head()

fig, ax = plt.subplots(sharey=True, figsize=(12,10))
sns.lineplot(data=df_commit_count, x='date', y='commit_count', hue='author')
plt.title('Количество коммитов на каждого пользователя')
plt.xlabel('Дата')
plt.ylabel('Количество коммитов')
plt.xticks(rotation = 45)
plt.show()

# Расчёт среднего времени между коммитами на каждого пользователя.
result_data = []

# Получение уникальных авторов
authors = df['author'].unique()

# Итерация по авторам
for author in authors:
    author_data = df[df['author'] == author]
    author_data = author_data.sort_values('date')
    author_data['delta'] = author_data['date'].diff().fillna(pd.Timedelta(seconds=0))
    average_delta = author_data['delta'].mean()

    # Добавление результатов в список
    result_data.append(pd.Series({'author': author, 'average_delta': average_delta}))

result_df = pd.concat(result_data, axis=1).T
result_df = result_df.reset_index(drop=True)

result_df.head(10)

